------------------------------------------------------------------------------
This is the project README file.
I think you can understand the variables and methods I used and their purpose.
This Package contains some of my best Codings. So I hope you Enjoy It!
------------------------------------------------------------------------------

PROJECT TITLE            : Numbers
PURPOSE OF PROJECT       : To check whether a no. is..
VERSION or YEAR          : 2.0 / 2019
HOW TO START THIS PROJECT: First read This.
AUTHORS                  : Sandeep
USER INSTRUCTIONS        : If you can minimize the programs even more and can increase the efficiency by reducing the output time.
                           Plz contact me.9668026535
                           The no. tells the difficulty level of the program.
No()  : Checks only 1 no.
Ser() : Checks till the given input.

01 Buzz          : If the no. ends or is divisible by 7.
                   Ex:- 17,14 etc.
02 Pronic/Oblong : (Rectangular/Heteromecic) no. is equal to the product of 2 consecutive integers.
                   Ex:- 0,2,6 etc.
03 Duck          : If the no. contains 0.
                   Ex:- 2013,2001 etc.
04 Triangualar   : Sum of consecutive no. is the no.
                   Ex:- 6, 1+2+3
05 Sum Product   : Sum of digits of no. is equal to product of digits of no.
                   Ex:- 123, 1+2+3=1*2*3
06 Special 2D    : Sum of Sum of digits of no. and product of digits of no. is equal to the no.
                   Ex:- 59, 5+9=14; 5*9=45; 14+45=59
07 Automorphic   : The no. is present in the last digit(s) of its square.
                   Ex:- 25, 25*25=625 25 in 625
08 Palindrome    : The no. is equal to the no. itself when reversed.
                   Ex:- 353
09 Niven/Harshad : If the no. is divisible by the sum of the digits of the no.
                   Ex:- 126, 126 is divisible by 9(=1+2+6)
10 Neon          : Sum of square of digits of the no. is equal to the no.
                   Ex:- 9, 9*9=81 8+1=9
11 Armstrong     : Sum of cube of digits of the no. is equal to the no.
                   Ex:- 153, 1^3+5^3+3^3=153
12 Special       : Sum of factorial of digits of the no. is equal to the no.
                   Ex:- 145, 1!+4!+5!=145
13 Disarium      : Sum of the digits to their power of the position is equal to the no.
                   Ex:- 135, 1^1+3^2+5^3=135
14 Perfect       : Sum of all the factors of the no.(including 1 and excluding the no.) is equal to the no.
                   Ex:- 6, 6=1+2+3
15 Prime Perfect : Sum of all the factors(which are prime) of the no.(including 1 and excluding the no.) is equal to the no.
                   Ex:- 6, 6=1+2+3
16 Sphenic       : The product of 3 distinct prime nos. is equal to the no.
                   Ex:- 30=2*3*5
17 Karprekar     : When square of the no. is divided equally (or right side have more digits) the sum of the divided no. is equal to the no.
                   Ex:- 297, 88209=88+209=297
18 Evil          : If there are Even nos. of 1 in its binary equivalent.
                   Ex:- 15, 1111
19 Magic/Lucky   : When digits are added continously till a single digit is obtained is equal to 1.
                   Ex:- 4627, 4+6+2+7=19=1+9=10=1+0=1
20 Happy         : When squares of the digits are added continously till a single digit is obtained is equal to 1.
                   Ex:- 31, 3^2+1^2=10=1^2+0^2=1
21 Smith         : A composite no. whose sum of digits is equal to the sum of its prime factor.
                   Ex:- 666, 6+6+6=18 (2,3,3,37)=2+3+3+3+7
22 Unique        : If the digits are not repeated.
                   Ex:- 5023,5796 etc.
23 Fascinating   : if"n"+"n*2"+"n*3" contains all the no. from 1 to 9.
                   Ex:- 192 = 192 384 576
24 Bouncy        : If a no. is unsorted.
                   Ex:- 91657432
25 ISBN          : A 10 digit no.whose sum of digits multiplied by their respective places is divisible by 11.
1 to 16: Easy; 17 to 21: Mid; 22 to 24: Tricky.

Factorial       : product of nos. from 1 to n.                                                                             Ex:- 5!=1*2*3*4*5=120
Prime           : Have 2 Factors 1 and the no. itself.                                                                     Ex:- 2,3,13 etc.
Twin Prime      : Pair of Consecutive Prime no. which differs by 2. triplet() prints 3 consecutive prime no.               Ex:- (11,13) (5,7,11)
Prime Factor    : Factors of a no. which are prime.                                                                        Ex:- 10=2*2*5*5
Twisted Prime   : If the reverse of a prime no. is also a prime no.                                                        Ex:- 13
Mobius          : 1 if 1; 0 if prime factors are repeated; (-1)^n where n is no.of prime factors.
Circular Prime  : Prime no. that's also a prime no. after shifting the digit repeatedly till the original no. is restored. Ex:- 197
Goldbach        : If a no. is sum of 2 odd primes.                                                                         Ex:- 7
Pythagorean Tri : if a^2+b^2=c^2                                                                                           Ex:- (3,4,5)
HCF_LCM         : Finds HCF n LCM.

Is        : It contains all the methods of this package. If something is deleted, you can retrieve from here.
Ser n num : Enter a No. n try them.
Convert   : Converts no. from one base to other.
Series    : Prints a No. series. Fib:- 0,1,1,2,3,5.. Trib:- 0,1,1,2,4,7..
Check     : Checks whether a no. is present in fibonacci or tribonacci series.
Frequency : Finds frequency of a no. or string.
Arrange   : Arranges no. or string in ascending or descending order.
Reverse   : Reverses a String or no.
Comb      : Makes combination of different Integers.
Crypt     : For encryption n decryption.
Remove    : It removes 0s from a no.
Infinite  : It is a useless test subject.